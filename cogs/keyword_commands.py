import discord
from discord.ext import commands
from discord import app_commands
import logging
from datetime import datetime
from config import DEFAULT_KEYWORDS
from utils.storage import server_keywords, save_config
from utils.embed_builder import create_confirmation_embed

logger = logging.getLogger(__name__)

class KeywordCommands(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name="setkeywords")
    async def set_keywords(self, ctx, *keywords):
        """D√©finit les mots-cl√©s pour le filtrage des articles"""
        if not keywords:
            await ctx.send("Veuillez sp√©cifier au moins un mot-cl√©. Exemple: `!setkeywords mot1 \"phrase avec espaces\" mot3`")
            return

        guild_id = str(ctx.guild.id)
        server_keywords[guild_id] = list(keywords)
        save_config()  # Sauvegarder la configuration

        # Cr√©er un embed pour la confirmation
        embed = create_confirmation_embed(
            title="üîç Mots-cl√©s configur√©s",
            description="Les articles RSS seront filtr√©s selon ces mots-cl√©s.",
            color=discord.Color.green(),
            author=ctx.author
        )

        # Ajouter les mots-cl√©s
        keywords_str = "\n".join([f"‚Ä¢ {keyword}" for keyword in keywords])
        embed.add_field(name="üìù Liste des mots-cl√©s", value=keywords_str, inline=False)

        # Ajouter des informations
        embed.add_field(name="‚ÑπÔ∏è Information", value="Seuls les articles contenant au moins un de ces mots-cl√©s seront publi√©s.", inline=False)

        # Ajouter un pied de page
        embed.set_footer(text=f"Configur√© par {ctx.author.display_name} ‚Ä¢ Utilisez !clearkeywords pour d√©sactiver le filtrage", 
                         icon_url=ctx.author.avatar.url if ctx.author.avatar else None)

        await ctx.send(embed=embed)
        logger.info(f"Mots-cl√©s configur√©s pour le serveur {guild_id}: {keywords}")

    @commands.command(name="addkeywords")
    async def add_keywords(self, ctx, *keywords):
        """Ajoute des mots-cl√©s √† la liste existante"""
        if not keywords:
            await ctx.send("Veuillez sp√©cifier au moins un mot-cl√© √† ajouter.")
            return

        guild_id = str(ctx.guild.id)
        if guild_id not in server_keywords:
            server_keywords[guild_id] = []

        # Ajouter les nouveaux mots-cl√©s
        added_keywords = []
        for keyword in keywords:
            if keyword not in server_keywords[guild_id]:
                server_keywords[guild_id].append(keyword)
                added_keywords.append(keyword)

        if not added_keywords:
            await ctx.send("Tous les mots-cl√©s sp√©cifi√©s sont d√©j√† dans la liste.")
            return

        save_config()  # Sauvegarder la configuration

        # Cr√©er un embed pour la confirmation
        embed = create_confirmation_embed(
            title="‚ûï Mots-cl√©s ajout√©s",
            description="Les mots-cl√©s suivants ont √©t√© ajout√©s √† la liste de filtrage:",
            color=discord.Color.green(),
            author=ctx.author
        )

        # Ajouter les nouveaux mots-cl√©s
        keywords_str = "\n".join([f"‚Ä¢ {keyword}" for keyword in added_keywords])
        embed.add_field(name="üìù Nouveaux mots-cl√©s", value=keywords_str, inline=False)

        # Ajouter la liste compl√®te
        all_keywords_str = ", ".join(server_keywords[guild_id][:10])
        if len(server_keywords[guild_id]) > 10:
            all_keywords_str += f" et {len(server_keywords[guild_id]) - 10} autres..."

        embed.add_field(name="üîç Liste compl√®te", value=f"Il y a maintenant {len(server_keywords[guild_id])} mots-cl√©s configur√©s.", inline=False)

        # Ajouter un pied de page
        embed.set_footer(text=f"Modifi√© par {ctx.author.display_name} ‚Ä¢ Utilisez !listkeywords pour voir tous les mots-cl√©s", 
                         icon_url=ctx.author.avatar.url if ctx.author.avatar else None)

        await ctx.send(embed=embed)
        logger.info(f"Mots-cl√©s ajout√©s pour le serveur {guild_id}: {added_keywords}")

    @commands.command(name="removekeywords")
    async def remove_keywords(self, ctx, *keywords):
        """Supprime des mots-cl√©s de la liste"""
        if not keywords:
            await ctx.send("Veuillez sp√©cifier au moins un mot-cl√© √† supprimer.")
            return

        guild_id = str(ctx.guild.id)
        if guild_id not in server_keywords or not server_keywords[guild_id]:
            await ctx.send("Aucun mot-cl√© n'est configur√© pour ce serveur.")
            return

        # Supprimer les mots-cl√©s
        removed = []
        for keyword in keywords:
            if keyword in server_keywords[guild_id]:
                server_keywords[guild_id].remove(keyword)
                removed.append(keyword)

        if not removed:
            await ctx.send("Aucun des mots-cl√©s sp√©cifi√©s n'a √©t√© trouv√© dans la liste.")
            return

        save_config()  # Sauvegarder la configuration

        # Cr√©er un embed pour la confirmation
        embed = create_confirmation_embed(
            title="‚ûñ Mots-cl√©s supprim√©s",
            description="Les mots-cl√©s suivants ont √©t√© supprim√©s de la liste de filtrage:",
            color=discord.Color.orange(),
            author=ctx.author
        )

        # Ajouter les mots-cl√©s supprim√©s
        keywords_str = "\n".join([f"‚Ä¢ {keyword}" for keyword in removed])
        embed.add_field(name="üìù Mots-cl√©s supprim√©s", value=keywords_str, inline=False)

        # Ajouter la liste restante
        if server_keywords[guild_id]:
            all_keywords_str = ", ".join(server_keywords[guild_id][:10])
            if len(server_keywords[guild_id]) > 10:
                all_keywords_str += f" et {len(server_keywords[guild_id]) - 10} autres..."
            
            embed.add_field(name="üîç Liste restante", value=f"Il reste {len(server_keywords[guild_id])} mots-cl√©s configur√©s.", inline=False)
        else:
            embed.add_field(name="üîç Liste vide", value="Tous les mots-cl√©s ont √©t√© supprim√©s. Le filtrage est d√©sactiv√©.", inline=False)

        await ctx.send(embed=embed)
        logger.info(f"Mots-cl√©s supprim√©s pour le serveur {guild_id}: {removed}")

    @commands.command(name="clearkeywords")
    async def clear_keywords(self, ctx):
        """Supprime tous les mots-cl√©s (d√©sactive le filtrage)"""
        guild_id = str(ctx.guild.id)
        if guild_id not in server_keywords or not server_keywords[guild_id]:
            await ctx.send("Aucun mot-cl√© n'est configur√© pour ce serveur.")
            return

        keyword_count = len(server_keywords[guild_id])
        server_keywords[guild_id] = []
        save_config()  # Sauvegarder la configuration

        # Cr√©er un embed pour la confirmation
        embed = create_confirmation_embed(
            title="üßπ Mots-cl√©s effac√©s",
            description=f"Tous les mots-cl√©s ({keyword_count}) ont √©t√© supprim√©s.",
            color=discord.Color.red(),
            author=ctx.author
        )

        embed.add_field(name="‚ÑπÔ∏è Information", value="Le filtrage est maintenant d√©sactiv√©. Tous les articles RSS seront publi√©s.", inline=False)

        await ctx.send(embed=embed)
        logger.info(f"Tous les mots-cl√©s ont √©t√© supprim√©s pour le serveur {guild_id}")

    @commands.command(name="listkeywords")
    async def list_keywords(self, ctx):
        """Affiche la liste des mots-cl√©s configur√©s"""
        guild_id = str(ctx.guild.id)
        if guild_id not in server_keywords or not server_keywords[guild_id]:
            # Embed pour aucun mot-cl√© configur√©
            embed = create_confirmation_embed(
                title="üîç Liste des mots-cl√©s",
                description="‚ö†Ô∏è Aucun mot-cl√© n'est configur√© pour ce serveur.",
                color=discord.Color.orange(),
                author=ctx.author
            )
            embed.add_field(name="‚ÑπÔ∏è Information", value="Le filtrage est d√©sactiv√©. Tous les articles RSS sont publi√©s.", inline=False)
            embed.add_field(name="üí° Conseil", value="Utilisez `!setkeywords mot1 mot2 ...` pour configurer des mots-cl√©s.", inline=False)
            
            await ctx.send(embed=embed)
            return

        # Cr√©er un embed pour la liste des mots-cl√©s
        embed = discord.Embed(
            title="üîç Liste des mots-cl√©s",
            description=f"{len(server_keywords[guild_id])} mots-cl√©s configur√©s pour le filtrage:",
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )

        # Diviser les mots-cl√©s en plusieurs champs si n√©cessaire
        keywords = server_keywords[guild_id]
        chunk_size = 15  # Nombre de mots-cl√©s par champ

        for i in range(0, len(keywords), chunk_size):
            chunk = keywords[i:i+chunk_size]
            keywords_str = "\n".join([f"‚Ä¢ {keyword}" for keyword in chunk])
            embed.add_field(name=f"üìù Mots-cl√©s {i+1}-{i+len(chunk)}", value=keywords_str, inline=False)

        # Ajouter des informations
        embed.add_field(name="‚ÑπÔ∏è Information", value="Seuls les articles contenant au moins un de ces mots-cl√©s seront publi√©s.", inline=False)

        # Ajouter un pied de page
        embed.set_footer(text=f"Demand√© par {ctx.author.display_name} ‚Ä¢ Utilisez !help pour plus d'options", 
                         icon_url=ctx.author.avatar.url if ctx.author.avatar else None)

        await ctx.send(embed=embed)
        logger.info(f"Liste des mots-cl√©s affich√©e pour le serveur {guild_id}")

    @commands.command(name="resetkeywords")
    async def reset_keywords(self, ctx):
        """R√©initialise les mots-cl√©s avec la liste par d√©faut"""
        guild_id = str(ctx.guild.id)
        server_keywords[guild_id] = DEFAULT_KEYWORDS.copy()
        save_config()  # Sauvegarder la configuration

        # Cr√©er un embed pour la confirmation
        embed = create_confirmation_embed(
            title="üîÑ Mots-cl√©s r√©initialis√©s",
            description=f"Les mots-cl√©s ont √©t√© r√©initialis√©s avec la liste par d√©faut ({len(DEFAULT_KEYWORDS)} mots-cl√©s).",
            color=discord.Color.purple(),
            author=ctx.author
        )

        # Ajouter quelques exemples de mots-cl√©s
        examples = ", ".join(DEFAULT_KEYWORDS[:10])
        if len(DEFAULT_KEYWORDS) > 10:
            examples += f" et {len(DEFAULT_KEYWORDS) - 10} autres..."

        embed.add_field(name="üìù Exemples", value=examples, inline=False)
        embed.add_field(name="‚ÑπÔ∏è Information", value="Utilisez `!listkeywords` pour voir la liste compl√®te.", inline=False)

        await ctx.send(embed=embed)
        logger.info(f"Mots-cl√©s r√©initialis√©s pour le serveur {guild_id}")

async def setup(bot):
    await bot.add_cog(KeywordCommands(bot))